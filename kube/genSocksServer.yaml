# Author: Nuno Aguiar
help:
  text   : "Generates the deployment YAML for a quick socks server. Example: 'ojob ojob.io/kube/genSocksServer | kubectl apply -f - && kubectl port-forward deploy/socks-server 1080:1080'"
  expects: 
  - name     : name
    desc     : A custom name for the socks server deployment (defaults to socks-server)
    example  : socks-server
    mandatory: false
  - name     : port
    desc     : The port where the socks server will be started within the container (defaults to 1080)
    example  : 1080
    mandatory: false
  - name     : nodeport
    desc     : If nodeport is defined then the corresponding service yaml will also be output (e.g. nodeport=31080)
    example  : 31080
    mandatory: false
  - name     : onlylocal
    desc     : Deploy the socks proxy server only accepting connections to private network ip addresses
    example  : "true"
    mandatory: false

todo:
- Generate socks server deploy

ojob:
  opacks      :
  - openaf: 20211229
  catch       : if (isDef(exception.javaException)) exception.javaException.printStackTrace(); else printErr(exception)
  logToConsole: false   # to change when finished
    
init:
  svc: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: {{name}}
      name: {{name}}
    spec:
      ports:
      - nodePort  : {{nodeport}}
        port      : {{nodeport}}
        protocol  : TCP
        targetPort: {{port}}
      selector:
        app: {{name}}
      sessionAffinity: None
      type: NodePort

  deploy: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: {{name}}
      name: {{name}}
    spec:
      selector:
        matchLabels:
          app: {{name}}
      template:
        metadata:
          labels:
            app: {{name}}
        spec:
          containers:
          - image: nmaguiar/socksd
            imagePullPolicy: IfNotPresent
            name: oaf
            {{#if onlylocal}}
            env:
            - name : ONLY_LOCAL
              value: "true"
            {{/if}}
            ports:
            - containerPort: {{port}}
              protocol: TCP
            resources: {}
          restartPolicy: Always

jobs:
# -----------------------------------
- name : Generate socks server deploy
  check:
    in:
      name     : isString.default("socks-server")
      port     : toNumber.isNumber.default(1080)
      nodeport : toNumber.isNumber.default(__)
      onlylocal: toBoolean.isBoolean.default(false)
  exec : |
    print( templify(args.init.deploy, args) )
    if (isDef(args.nodeport)) {
      print("---\n")
      print( templify(args.init.svc, args) )
    }
