# Template          : Simple Upload HTTP server
# Author            : Nuno Aguiar
# How to run        : ojob httpd.yaml (change /data for the folder you need)
# oPack dependencies: latest ojob-common;

init:
  # The port where the http server will be available
  port      : &PORT        8080
  # Where the pid file will be located
  piddir    : &PIDDIR      uploadHTTPd.pid
  # What uri will be used for upload and browse
  path      : &PATH        "."
  uploadUri : &UPLOAD_URI  "/_upload"
  uri       : &URI         "/"

ojob:
  daemon: true
  opacks:
  - oJob-common: 20210425
  unique: 
    pidFile     : *PIDDIR
    killPrevious: false

include:
  - oJobHTTPd.yaml

todo:
  - name: HTTP Start Server
    args: |
      ({ "port": (isDef(args.port) ? Number(args.port) : global.args.init.port), 
         "mapLibs": true })

  - name: Prepare default
  - name: Prepare my file browser
  - name: Prepare my upload
  #- name: Prepare my docs

help:
  text   : Starts a very simple HTTP server on the provided port for file upload
  expects:
  - name: port 
    desc: The port to use (default to 8080)
  - name: path
    desc: The path from which to browse files (defaults to '.')
  - name: uploadUri
    desc: The default URI to use for upload (defaults to '/_upload')
  - name: uri
    desc: The default URI to use (defaults to '/')

###########################################################
# The code

jobs:
  - name: Prepare default
    to  : HTTP Default
    exec: |
      args = merge(args, 
         { "port": (isDef(args.port) ? Number(args.port) : global.args.init.port),
           "uri" : "/" } );

  # Provides a file browser
  - name: Prepare my file browser
    to  : HTTP File Browse
    exec: |
      args = merge(args,
         ({ "port": (isDef(args.port) ? Number(args.port) : global.args.init.port),
            "path": (isDef(args.path) ? String(args.path) : global.args.init.path),
            "uri" : (isDef(args.uri)  ? String(args.uri)  : global.args.init.uri) })
      );

  # Provides a upload uri
  - name: Prepare my upload
    to  : HTTP Upload
    exec: |
      args = merge(args, 
        ({ "port": (isDef(args.port)      ? Number(args.port)      : global.args.init.port),
           "path": (isDef(args.path)      ? String(args.path)      : global.args.init.path),
           "uri" : (isDef(args.uploadUri) ? String(args.uploadUri) : global.args.init.uploadUri) })
      );

  ## What to answer to requests to /docs
  #- name: Prepare my docs
  #  to  : HTTP Service
  #  args: 
  #    uri       : /docs
  #    port      : *PORT
  #    execURI   : "return ow.server.httpd.replyFileMD(server, '/data/docs', '/docs', request.uri);"