# Author: Nuno Aguiar
help:
  text   : Generates an oJob ready to act a httpd service
  expects: 
  - name     : port
    desc     : The port for the httpd service to use
    example  : 8080
    mandatory: false

todo:
- Generate httpd job

ojob:
  opacks      :
  - openaf: 20230704
  - oJob-common: 20230905
  catch       : printErrnl("[" + job.name + "] "); if (isDef(exception.javaException)) exception.javaException.printStackTrace(); else printErr(exception)
  logToConsole: false   # to change when finished
        
init:
  oj: |
    todo:
    # Starts the server
    - (httpdStart  ): &PORT {{port}}

    # Setups the default answer, /healthz, /livez and /metrics
    - (httpdDefault): *PORT
      ((uri       )): /
    - (httpdHealthz): *PORT 
    - (httpdMetrics): *PORT
      ((prefix    )): mytest

    # Allows browsing of files
    #- (httpdFileBrowse): *PORT
    #  ((uri          )): /browse
    #  ((path         )): .

    # Allows for the upload of files
    #- (httpdUpload): *PORT
    #  ((uri      )): /upload
    #  ((path     )): .

    # Adds a custom metric
    #- (httpdAddMetric): global-counter
    #  ((fn          )): | 
    #    // Sets an atomic counter if one does not exist and returns a counter increment
    #    if (isUnDef(global.counter)) global.counter = $atomic()
    #    return global.counter.inc()

    # /test calls the 'test' job
    - (httpdService): *PORT
      ((uri       )): /test
      ((execURI   )): |
        // Shows all request components for debug
        cprint(request)
        // Returns the result of calling the job 'test' passing the request and expecting an ANSWER to be returned
        return ow.server.httpd.reply($job("test", request).ANSWER)

    jobs:
    # ---------------------------------
    # Job test is written in shell code
    - name: test
      lang: shell
      exec: |
        # Sets ANSWER in shell script
        ANSWER="Echo from the shell (a: \{{params.a}})"

        # return ANSWER

    # Includes the http server functionality
    include:
    - oJobHTTPd.yaml

    # Makes sures it runs forever and oJob-common is included
    ojob:
      daemon: true
      opacks:
        oJob-common: 20230905

jobs:
# ------------------------
- name : Generate httpd job
  check:
    in:
      port: toNumber.isNumber.default(8080)
  exec : |
    tprint(args.init.oj, {
      port: args.port
    })