# Author: Nuno Aguiar
help: 
  text   : Returns a list of hash for each ojob in a ojob.io like site.
  expects: 
  - name     : url
    desc     : The URL for a ojob.io like site
    example  : https://ojob.io
    mandatory: false
  - name     : file
    desc     : Finds a OJOB_INTEGRITY entry and replaces or appends a new one
    example  : .openaf_profile
    mandatory: false

init:
  help: *HELP

todo:
- Generate hash list

ojob:
  opacks      :
  - openaf: 20210515
  catch       : logErr(exception)
  logToConsole: true   # to change when finished
        

jobs:
# ------------------------
- name: Generate hash list
  exec: |
    args.url = _$(args.url, "url").default("https://ojob.io");

    var data = $rest().get(args.url + "/index.json");
    var res = {};

    if (isMap(data) && isMap(data.init) && isArray(data.init.l)) {
      data = data.init.l.map(r => r.replace(/\.yaml$/, ".json"));
      data.forEach(r => {
        log("Getting hash for '" + r + "'...");
        res[r] = "sha384-" + sha384( $rest().get2Stream(r) );
      });
    }
  
    if (isString(args.file)) {
      var extra = "OJOB_INTEGRITY = " + stringify(res, __, "") + ";"

      if (io.fileExists(args.file)) {
        var str = io.readFileString(args.file)
        if (str.match(/^OJOB_INTEGRITY /m)) {
          str = str.replace(/^OJOB_INTEGRITY .+$/, extra)
        } else {
          str += "\n" + extra
        }
        io.writeFileString(args.file, str)
      } else {
        io.writeFileString(args.file, extra)
      }
    } else {
      ow.oJob.output(res, args);
    }