# Author            : Nuno Aguiar
help: 
  text   : | 
    Launches a simple service to execute a job with the provided arguments where __ojob is the job to execute.
    Example: 'curl -XPOST http://my.service:8787 -H "Content-Type: application/json" -d "{ \"__ojob\": \"ojob.io/hello/world\" }"'
  expects:
  - name: port
    desc: The port on which to launch the service (defaults to 8787)

init:
  # The port where the rest services will be available
  port  : &PORT   8787
  # Where the pid file will be located
  piddir: &PIDDIR service.pid

ojob:
  daemon      : true
  argsFromEnvs: true
  opacks      :
  - oJob-common
  unique      :
    pidFile     : *PIDDIR
    killPrevious: false
  catch       : |
    sprintErr(exception);

include:
  - oJobRest.yaml

todo:
- name: REST Start Server
  args: |
    ({ port: Number( _$(args.port, "port").default(global.args.init.port) ) })
- name: Prepare Healthz
- name: Prepare html
- name: Prepare default

jobs:
# ---------------------
- name: Prepare Healthz
  to  : REST Healthz
  args:
    uri: /healthz
  exec: |
    args.port = Number( _$(args.port, "port").default(global.args.init.port) );

# ------------------
- name: Prepare html
  to  : REST Service
  args:
    uri       : /html
    returnHTML: true
    execGET   : "return { }"
    execPOST  : |
      if (isUnDef(data.__ojob)) return {};
      log("Running '" + stringify(data, void 0, "") + "'...");
      __pm = {};
      oJobRunFile(data.__ojob, merge(data, { __format: "pm" }), genUUID(), void 0, true);
      var res = clone(__pm);
      if (isDef(res._map)) return res._map;
      if (isDef(res._list)) return res._list;
      if (isDef(res.result)) return { result: res.result };
      return res; 
    execPUT   : "return { }"
    execDELETE: "return { }"
  exec: |
    if (isDef(args.PORT)) args.port = args.PORT
    args.port = Number( _$(args.port, "port").default(global.args.init.port) )


# ---------------------
- name: Prepare default
  to  : REST Service
  args:
    uri       : /
    execGET   : "return { }"
    execPOST  : |
      if (isUnDef(data.__ojob)) return {};
      log("Running '" + stringify(data, void 0, "") + "'...");
      __pm = {};
      oJobRunFile(data.__ojob, merge(data, { __format: "pm" }), genUUID(), void 0, true);
      var res = clone(__pm);
      if (isDef(res._map)) return res._map;
      if (isDef(res._list)) return res._list;
      if (isDef(res.result)) return { result: res.result };
      return res; 
    execPUT   : "return { }"
    execDELETE: "return { }"
  exec: |
    args.port = Number( _$(args.port, "port").default(global.args.init.port) );
