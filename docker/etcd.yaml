# Author: Nuno Aguiar
help:
  text   : Generates a quick docker-compose with etcd
  expects: 
  - name     : cluster
    desc     : If defined will add the number of etcd nodes specified.
    mandatory: false
    example  : 3

init:
  dc: |
    version: '3.3'

    networks:
      etcd:
        driver: bridge

    services:
    {{#if single}}  etcd       :
        restart    : always
        image      : bitnami/etcd
        ports      :
        - "2379:2379"
        networks:
        - etcd
        healthcheck   :
          test    : [ "CMD-SHELL", "curl --silent --fail http://127.0.0.1:2379/health || exit 1" ]
          interval: 15s
          timeout : 10s    
          retries : 3    
        environment:
          ALLOW_NONE_AUTHENTICATION : "yes"
          ETCD_ADVERTISE_CLIENT_URLS: http://etcd:2379
        volumes:
          - etcd_data:/bitnami/etcd
    {{else}}{{#each nodes}}  {{name}}      :
        restart : always
        image   : bitnami/etcd
        networks:
        - etcd{{#if first}}
        ports   :
        - "2379:2379"{{/if}}
        healthcheck   :
          test    : [ "CMD-SHELL", "curl --silent --fail http://127.0.0.1:2379/health || exit 1" ]
          interval: 30s
          timeout : 5s    
          retries : 3    
        environment: 
          ETCD_NAME                       : {{name}}
          ALLOW_NONE_AUTHENTICATION       : "yes"
          ETCD_ADVERTISE_CLIENT_URLS      : http://{{name}}:2379
          ETCD_INITIAL_CLUSTER            : {{{../list}}}
          ETCD_INITIAL_CLUSTER_STATE      : new
          ETCD_INITIAL_CLUSTER_TOKEN      : etcd-cluster
          ETCD_INITIAL_ADVERTISE_PEER_URLS: http://{{name}}:2380
          ETCD_LISTEN_PEER_URLS           : http://0.0.0.0:2380
          ETCD_LISTEN_CLIENT_URLS         : http://0.0.0.0:2379
        volumes:
          - {{name}}_data:/bitnami/etcd

      {{/each}}
    {{/if}}

    volumes:{{#if single}}
      etcd_data:
        driver: local
    {{else}}{{#each nodes}}
      {{name}}_data:
        driver: local{{/each}}
    {{/if}}

todo:
- Check for docker
- Generate docker-compose

include:
- ojob.io/docker/_common

ojob:
  opacks      :
  - openaf: 20211229
  catch       : logErr(exception)
  logToConsole: false   # to change when finished
        

jobs:
# ------------------------------
- name : Generate docker-compose
  check:
    in:
      cluster: toNumber().isNumber.default(3)
  exec : |
    var data = { nodes: [], single: args.cluster == 1 }

    Array.from(Array(args.cluster).keys()).forEach(node => {
      data.nodes.push({
        name : "etcd" + (node + 1),
        first: node == 0
      })
    })

    if (!data.single) 
      data.list = data.nodes.map(n => $f("%s=http://%s:2380", n.name, n.name)).join(",")

    tprint(args.init.dc, data)