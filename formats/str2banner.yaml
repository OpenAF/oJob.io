# Author: Nuno Aguiar
help:
  text   : Outputs a string to an ascii banner.
  expects: 
  - name     : str
    desc     : The string to output as a banner
    example  : example
    mandatory: false
  - name     : font
    desc     : The banner font to use (e.g. use list=true for the complete list)
    example  : banner
    mandatory: false
  - name     : list
    desc     : If list=true will output a list of the available fonts (if str is defined it will use it as examples for each font)
    example  : "true"
    mandatory: false
    options  :
    - "false"
    - "true"

todo:
- Check options
- name: List fonts
  when: list
- name: Write banner
  when: write

ojob:
  opacks      :
  - openaf : 20211229
  - AsciiMo
  catch       : printErr(exception)
  logToConsole: false   # to change when finished
  loadLibs    :
  - asciimo.js

jobs:
# --------------------
- name : Check options
  check:
    in:
      list: toBoolean.isBoolean.default(false)
  exec : |
    if (args.list) ow.oJob.setState("list"); else ow.oJob.setState("write")

# -----------------
- name : List fonts
  check:
    in:
      str : isString.default(__)
  exec : |
    var a = new AsciiMo()
    var fn = arr => {
      arr.forEach(elem => {
        print(repeat(elem.font.length, "="))
        print(elem.font)
        print("")
        print(elem.text)
        print(repeat(elem.font.length, "-"))
        print("")
      })
    }

    var _fn = (isDef(args.__format) ? arr => ow.oJob.output(arr, args) : fn)

    if (isDef(args.str)) {
      var lst = $from(a.listFonts()).sort("-").select(f => ({ font: f, text: a.write(args.str, f) }))
      _fn(lst)
    } else {
      ow.oJob.output($from(a.listFonts()).sort("-").select(), args)
    }

# -------------------
- name : Write banner
  check:
    in:
      str : isString.default("aBc123")
      font: isString.default("banner")
  exec : |
    var a = new AsciiMo()
    var ban = a.write(args.str, args.font)
    print(ban.replace(/^\s*\n+/m, "").replace(/\n+$/, ""))
