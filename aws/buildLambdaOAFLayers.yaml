# Author: Nuno Aguiar
help:
  text   : Build AWS Lambda OAF layers
  expects: 
  - name     : opacks
    desc     : Comma-delimited list of opacks to include
    example  : oJob-common,aws,Mongo,S3,ElasticSearch,Notifications,Redis,QR,RSS,PasteBin
    mandatory: false

todo:
- Check for docker
- Build layers
- Instructions

include:
- ojob.io/docker/_common

ojob:
  opacks      :
  - openaf: 20220822
  catch       : printErrnl("[" + job.name + "] "); if (isDef(exception.javaException)) exception.javaException.printStackTrace(); else printErr(exception)
  logToConsole: true   # to change when finished
        

jobs:
# -------------------
- name : Build layers
  check:
    in:
      opacks: isString.default("oJob-common,aws,Mongo,S3,ElasticSearch,Notifications,Redis,QR,RSS,PasteBin")
      pack  : isString.default("OpenAFLambdaLayers")
      arch  : isString.default("x86_64")
  exec : |
    if (isUnDef(getOPackPath(args.pack))) includeOPack(args.pack)

    // Remove any existing zips
    io.rm("minijvm.zip")
    io.rm("minijvmARM.zip")
    io.rm("openaf-opacks.zip")
    io.rm("openaf.zip")

    // Build openaflambdabuilder ARM
    var path = getOPackPath(args.pack)
    $sh("docker build -t openaflambdabuilder .")
    .sh("docker run -ti --rm -v " + io.fileInfo(".").canonicalPath + ":/output openaflambdabuilder OPACKS=" + args.opacks)
    .sh("docker build -t openaflambdabuilder_arm -f Dockerfile.arm .")
    .sh("docker run -ti --rm -v " + io.fileInfo(".").canonicalPath + ":/output openaflambdabuilder_arm OPACKS=" + args.opacks)
    .pwd(path)
    .exec()

# ------------------
- name: Instructions
  exec: |
    print("To load them:")
    print("  aws lambda publish-layer-version --layer-name oaf_minijvm_x86 --zip-file fileb://minijvm.zip --compatible-architectures x86_64")
    print("  aws lambda publish-layer-version --layer-name oaf_minijvm_arm --zip-file fileb://minijvmARM.zip --compatible-architectures arm64")
    print("  aws lambda publish-layer-version --layer-name oaf_main --zip-file fileb://openaf.zip")
    print("  aws lambda publish-layer-version --layer-name oaf_opacks --zip-file fileb://openaf-opacks.zip")
    print("")