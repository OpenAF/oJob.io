# Author: Nuno Aguiar
help:
  text   : Updates a DNS entry of AWS Route 53 
  expects: 
  - name     : id
    desc     : The Route 53 zone id
    example  : "/hostedzone/Z0879"
    mandatory: true
  - name     : rec
    desc     : The Route 53 zone record to update
    example  : something.somewhere
    mandatory: true
  - name     : value
    desc     : "The record value to update (you can use templating like {{\\$env 'IP'}})"
    example  : 1.2.3.4
    mandatory: true
  - name     : type
    desc     : The record type (defaults to 'A')
    example  : 'A'
    mandatory: false
  - name     : ttl
    desc     : The record TTL in seconds (defaults to 300)
    example  : 300
    mandatory: false
  - name     : exiterror
    desc     : If "true" the job will exit with error if the update fails
    example  : "true"
    mandatory: false

todo:
- Update Route 53 entry

ojob:
  opacks      :
  - openaf: 20250725
  - AWS
  catch       : printErrnl("[" + job.name + "] " + exception); if (args.exiterror) exit(-1, true)
  logToConsole: true   # to change when finished
  loadLibs    :
  - aws.js

jobs:
# ----------------------------
- name : Update Route 53 entry
  check:
    in:
      id       : isString
      rec      : isString
      value    : isString
      type     : isString.default("A")
      ttl      : toNumber.isNumber.default(300)
      exiterror: toBoolean.isBoolean.default(false)
  exec : | #js
    var res
    var aws = new AWS()
    args.value = $t(args.value, args)
    res = aws.ROUTE53_setRecord(args.id, args.rec, args.type, args.value, args.ttl)

    if (isDef(res) && isDef(res.error)) {
      throw new Error("Error updating Route 53 record: " + stringify(res.error))
    }

    ow.oJob.output({ id: args.id, rec: args.rec, value: args.value, type: args.type, ttl: args.ttl, response: res }, args)