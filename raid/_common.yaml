# Author: Nuno Aguiar

jobs:
# -----------------------
- name: Check for OpenCli
  exec: |
    var exists = getOPackPath("OpenCli");
    if (!isString(exists)) throw "Couldn't find the OpenCli opack. Please install OpenCli.";

# ---------------------
- name: Connect to RAID
  exec: |
    if (isDef(args.socks)) {
      ow.loadObj()
      var ar = args.socks.split(":")
      ow.obj.setSOCKSProxy(ar[0], ar[1])
    }

    if (isDef(args.seckey)) {
      if (isDef(args.secbucket) && String(args.secbucket).length > 0) {
        args.secbucketpass = askDef(args.secbucketpass, "Sec bucket '" + args.secbucket + "' pass: ", true);
      }
      var res = $sec(args.secrepo, __, __, args.secpass).get(args.seckey, args.secbucket, args.secbucketpass);
      if (isMap(res)) {
        if (isDef(res._args) && res._obj == "AF") {
          if (!toBoolean(args.nolog)) lognl("Connecting to RAID... \r");
          global.af = $sec(args.secrepo, __, __, args.secpass).getObj(args.seckey, __, args.secbucket, args.secbucketpass);
        }
      }
      if (isString(res)) {
        args.url = res;
        args.url            = _$(args.url, "url").isString().$_();
        args.timeout        = _$(args.timeout, "timeout").isString().default(__);
        args.ctimeout       = _$(args.ctimeout, "ctimeout").isString().default(__);
        args.useTransaction = _$(args.useTransaction, "useTransaction").isString().default(__);

        if (!toBoolean(args.nolog)) lognl("Connecting to RAID... \r");
        global.af = new AF(args.url, Number(args.timeout), Number(args.ctimeout), toBoolean(args.useTransaction));
      }
    } else {
      args.url            = _$(args.url, "url").isString().$_();
      args.timeout        = _$(args.timeout, "timeout").isString().default(__);
      args.ctimeout       = _$(args.ctimeout, "ctimeout").isString().default(__);
      args.useTransaction = _$(args.useTransaction, "useTransaction").isString().default(__);

      if (!toBoolean(args.nolog)) lognl("Connecting to RAID... \r");
      global.af = new AF(args.url, Number(args.timeout), Number(args.ctimeout), toBoolean(args.useTransaction));
    }

    if (!toBoolean(args.nolog)) log("Connected to RAID " + getRAIDVersion())
    ow.loadWAF()
    ow.oJob.add2Todo("Disconnect from RAID");

# --------------------------
- name: Disconnect from RAID
  type: shutdown
  exec: |
    if (!toBoolean(args.nolog)) log("Disconnecting from RAID...");
    global.af.close();

# ---------------
- name: Read file
  exec: |
    if (isDef(args.file) && io.fileExists(args.file)) {
      if (args.file.endsWith(".yaml") || args.file.endsWith(".yml")) {
        args.conf = io.readFileYAML(args.file);
      } else {
        if (args.file.endsWith(".xml")) {
          args.conf = io.readFilePMap(args.file);
        } else {
          args.conf = io.readFileJSON(args.file);
        }
      }

      if (!isArray(args.conf)) args.conf = [ args.conf ];
    }

# ---------------
- name: Save file
  exec: |
    if (isDef(file)) {
      if (isArray(args.conf) && args.conf.length == 1) args.conf = args.conf[0];

      log("Writing to " + file + "...");
      if (file.endsWith(".yaml") || file.endsWith(".yml")) {
        io.writeFileYAML(file, args.conf, isArray(args.conf));
      } else {
        if (file.endsWith(".xml")) {
          io.writeFilePMap(file, args.conf);
        } else {
          io.writeFileJSON(file, args.conf);
        }
      }

      args = { file: file };
    }