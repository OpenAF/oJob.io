name: Build oJob.io

on:
  #push:
  #  branches: [ master ]
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    #permissions:
    #  contents: write
    #  pull-requests: write
      
    steps  :
    # --------------------------
    - name: Cache OpenAF runtime
      uses: actions/cache@v3
      with:
        key : oaf-nightly
        path: /tmp/oaf
        
    # -------------------------
    #- uses: actions/checkout@v2

    # --------------------------
    - name: Install oJobIO opack
      uses: openaf/ojob-action@v4
      with:
        dist: nightly
        def : |
          todo:
          - Install aux packs
          - Copy files
          - Run Setup oJobIO
          - Run Rebuild
          #- Convert formats

          jobs:
          - name: Install aux packs
            lang: shell
            exec: |
              /tmp/oaf/opack install ojobio
              /tmp/oaf/opack install ojob-common

          - name: Copy files
            lang: shell
            exec: |
              cp -R /tmp/oaf/oJobIO/* .
              ls -lad *
              find imgs | wc
              find ojobs | wc
              echo "__threadPoolFactor=16;" > ~/.openaf_profile

          - name: Run Setup oJobIO
            lang: shell
            typeArgs:
              shellPrefix: setupOJobIO
            exec: |
              /tmp/oaf/ojob setupOJobIO.yaml
              find ojobs | wc

          - name: Run Rebuild
            lang: shell
            typeArgs:
              shellPrefix: rebuild
            exec: |
              /tmp/oaf/ojob rebuild.yaml NAME=ojob.io URL=ojob.io PROTO=https

          - name: Convert to JSON
            exec: |
              log("Converting " + args.filepath + "...")
              oJobRunFile("ojob.io/compile", { source: args.canonicalPath, target: args.canonicalPath.replace(/\.ya?ml$/, ".json") }, genUUID())

          - name: Convert to HTML
            exec: |
              log("Converting " + args.filepath + "...")
              oJobRunFile("ojob.io/formats/md2html", { md: args.canonicalPath, html: args.canonicalPath.replace(/\.md$/, ".html") }, genUUID())

          - name: Convert formats
            exec: |
              listFilesRecursive("ojobs").forEach(r => {
                if (r.isFile)Â {
                  if (r.filename.endsWith(".yaml")) $job("Convert to JSON", r)
                  if (r.filename.endsWith(".md"))   $job("Convert to HTML", r)
                }
              })

    # -----------------------
    - name: Copy build result
      uses: openaf/ojob-action@v4
      env :
        OS_OJOBIO: ${{ secrets.OS_OJOBIO }}
      with:
        dist  : nightly
        def   : |
          ojob:
            opacks: 
            - S3
          
          include: 
          - s3.yaml
            
          todo:
          - Copy build result
          
          jobs:
          - name: Copy build result
            to  :
            - (secget)  : OS_OJOBIO
              ((secEnv)): true
            - name: S3 Sync folder
              args:
                squash   : remote
                localPath: output
                bucket   : ojobio
                execute  : true
