# Author: Nuno Aguiar
help:
  text   : Interactive process to unset data from an OpenAF sBucket
  expects: 
  - name     : repo
    desc     : An OpenAF sBucket repository
    example  : "default"
    mandatory: false
  - name     : sbucket
    desc     : The sBucket to unset the data
    example  : "default"
    mandatory: false
  - name     : key
    desc     : The key to unset the data
    example  : "key"
    mandatory: false
  - name     : pass
    desc     : The password of the sBucket repository
    example  : "password"
    mandatory: false

todo:
- Unset sBucket key data

ojob:
  opacks      :
  - openaf: 20241117
  catch       : printErrnl("[" + job.name + "] "); printErr(exception)
  logToConsole: false   # to change when finished

jobs:
# -----------------------------
- name : Unset sBucket key data
  check:
    in:
      repo   : isString.default(__)
      sbucket: isString.default(__)
      key    : isString.default(__)
      pass   : isString.default(__)
  exec : |
    // Ask for the password
    var pwd = isDef(args.pass) ? args.pass : askEncrypt("Password of the default sbuckets repo: ")
    var lst1 = Object.keys( $sec(args.repo, __, pwd).list() )

    // First-level 
    var level1 = isDef(args.sbucket) ? lst1.indexOf(args.sbucket) : askChoose("Choose a sbucket: ", lst1)
    if (level1 < 0) throw "sBucket not found"

    // Second-level
    var lst2 = $sec(args.repo, lst1[level1], pwd).list()
    var level2 = isDef(args.key) ? lst2.indexOf(args.key) : askChoose("Choose a key: ", lst2[lst1[level1]])
    if (level2 < 0) throw "Key not found"

    // Unset the data
    $sec(args.repo, lst1[level1], pwd).unset(lst2[lst1[level1]][level2])
    var _data = $sec(args.repo, lst1[level1], pwd).list()
    _data = isDef(_data) ? _data[lst1[level1]] : {}

    args.__format = _$(args.__format, "__format").isString().default("cyaml")
    ow.oJob.output(_data, args)
