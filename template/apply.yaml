# Author: Nuno Aguiar
help: 
  text   : Generates new content based on a template (HandleBars (https://handlebarsjs.com)) and a data file. Conditional helpers from https://assemble.io/helpers/helpers-comparison.html, "debug", "stringify", "stringifyInLine", "toYAML", "env", "escape" and "owFormat_" are also available.
  expects: 
  - name   : data
    desc   : The data file to apply (use the key "_file" to specify an output file and/or "_template" for a template file to use for each data entry)
    example: data.yaml
  - name   : template
    desc   : The default HandleBars template to use (ignored if "_template" is provided)
    example: something.hbs
  - name   : file
    desc   : If specified will save the generated output to the corresponding file (ignored if the key "_file" is found on data in an array)
    example: outputFile

todo:
- name: Check input
- name: Apply data
  args: global.data

ojob:
  opacks      :
  - openaf: 20221216
  catch       : logErr(exception);
  logToConsole: false   # to change when finished
  depsTimeout : 1000

jobs:
# ----------------
- name: Apply data
  deps: Check input
  exec: |
    if (isDef(args._file)) {
      if (isDef(args._template)) {
        if (isUnDef(global.templates[md5(args._template)])) {
          global.templates[md5(args._template)] = global.fnDefaultTemplate(args._template);
        }
        log("Writing result to '" + args._file + "'...");
        io.writeFileString(args._file, templify(global.templates[md5(args._template)], args));
      } else {
        log("Writing result to '" + args._file + "'...");
        io.writeFileString(args._file, templify(global.fnDefaultTemplate(global.fileTemplate), args));
      }
    } else {
      if (isArray(global.data)) {
        //logWarn("Entry _file not found for: " + stringify(args, void 0, ""));
        var tmpl;
        if (isDef(args._template)) tmpl = args._template; else tmpl = (isDef(global.fileTemplate) ? global.fileTemplate : global.template);
        var res = templify(global.fnDefaultTemplate(tmpl), args)
        if (isDef(global.file) && isUnDef(args._file)) {
          log("Writing result to '" + global.file + "'...");
          io.writeFileString(global.file, res);
        } else {
          if (isDef(args._file)) {
            log("Writing result to '" + args._file + "'...");
            io.writeFileString(args._file, res);
          } else {
            print(res);
          }
        }
      } else {
        var tmpl;
        if (isDef(args._template)) tmpl = args._template; else tmpl = (isDef(global.fileTemplate) ? global.fileTemplate : global.template);
        var res = templify(global.fnDefaultTemplate(tmpl), data);
        if (isDef(global.file) && isUnDef(args._file)) {
          log("Writing result to '" + global.file + "'...");
          io.writeFileString(global.file, res);
        } else {
          if (isDef(args._file)) {
            log("Writing result to '" + args._file + "'...");
            io.writeFileString(args._file, res);
          } else {
            print(res);
          }
        }
      }
    }


# --------------------
- name: Check input
  exec: |
    ow.loadTemplate();
    args.data     = _$(args.data, "data").$_();

    if (!io.fileExists(args.data))     throw "Data file '" + args.data + "' not found!";
    if (isDef(args.template)) global.fileTemplate = args.template;
    if (isDef(args.file)) global.file = args.file;

    global.templates = {};
    global.fnDefaultTemplate = (tmpl) => {
      if (isDef(tmpl) && isDef(global.templates[md5(tmpl)])) return global.templates[md5(tmpl)];
      if (isUnDef(tmpl)) {
        logWarn("No template provided. Use 'template=mytemplate.hbs' or the _template key.");
        return "";
      } else {
        if (tmpl.indexOf("\n") < 0 && io.fileExists(tmpl)) {
          global.templates[md5(tmpl)] = io.readFileString(tmpl);
        } else {
          global.templates[md5(tmpl)] = tmpl;
        }
        return global.templates[md5(tmpl)];
      }
    }

    if (args.data.match(/\.ya?ml/i)) {
      global.data = io.readFileYAML(args.data);
    } else {
      global.data = io.readFileJSON(args.data);
    }
    if (isMap(global.data) && isDef(global.data._template)) { global.template = global.data._template; }
    if (isDef(global.data.data)) global.data = data.data;

    ow.loadTemplate();
    ow.template.addConditionalHelpers();
    ow.template.addFormatHelpers();
    ow.template.addOpenAFHelpers();